

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
Creation
2025-01-30
Created basic project as MultiPlatform SwiftUI document-based app


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
Basic editing with binary doc save/load
2025-01-30..31

ControlFocusTag
StepperNumView 
PlatformHelpers
- added (Copied from Purrticles & simplified)

DocundoableDocument
- DocStore helper struct added to store same props as we edit
- UTType changed to test.aussie.docundoable
- default text prop replaced by count, amount, note
- init(...) basic members added
- init(ReadConfiguration) - filled in stub to use JSONDecoder and DocStore
- filewrapper(WriteConfiguration) - filled in stub to use JSONEncoder and DocStore


ContentView
- add @FocusState focTag
- add a VStack with two instances of StepperNumView & update TextEditor with style & focus

info.plist
- LSItemContentTypes 
  - doctype changed to test.aussie.docundoable
  - NSUbiquitousDocumentUserActivityType suffix changed to .document
- UTImportedTypeDeclarations
  - UTTypeConformsTo
    - single public.plain-text replaced with public.data & public.content
  - UTTypeDescription changed to "Docundoable binary document"


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
Add undo/redo using UndoManager
2025-02-01

ContentView
- add undoManager env property
- add toolbar items for iOS using undoManager for titles and actions


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
Add undo/redo naming using UndoManager in doc
2025-02-02

ContentView
- add .onAppear and .oncChange to pass UndoManager to document

DocundoableDocument
- add DocHelper to contain undoManager env property
- add docH property to refer to this mutable state
- add setUndoManager func
- for the three value properties being edited, add didSet to set Action names


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
Add focus change by tapping background, to dismiss keyboard
2025-02-02

ContentView
- VStack - added background with onTapGesture to nil focTag
- added styling with a VStack and background on TextEditor to see its edges

DocundoableDocument
- no functional change but added print in didSet for count (because the pseudo-property oldValue is not loggable in debugger)


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
Add focus change and setting by buttons on keyboard
2025-02-02

DocundoableDocument


- setDefault added

ContentView
- added a toolbar to add keyboard  buttons for Default and Done that set focTag = nil & invoked doc updater


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
Remove UndoManager entirely and manage ourself
2025-02-04..05

ContentView
- remove undoManager & event code to pass to doc
- use document methods instead of undoManager for undo/redo
- use document properties instead of undoManager for menu enabling and titles

DocundoableDocument
- remove setUndoManager
- canUndo, canRedo added
- undo, redo funcs added to use un/redoStack
- un/redoMenuTitle added
- private apply(Doable) added that cases on tag knowing which props to set
- DocHelper
  - remove undoManager
  - add undoStack & redoStack
  - add isUndoing flag
  - add smart append(Doable)
  
Doable.SwiftUI
- added with protocol Doable and family of structs implementing


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
Use classes for Doable as it's polymorphic behaviour
2025-02-05

Doable.swift
- protocol Doable 
  - changed to base class
  - associatedtype valueType removed
  - moved default implementations from extension to class
- structs changed to subclasses, calling super.init

DocundoableDocument
- apply() - take Doable not any Doable
- DocHelper
  - undoStack & redoStack changed from [any Doable] to [Doable]
  - append() - take Doable not any Doable


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
Add commands so edit menu in macOS works
2025-02-06..07

DocundoableDocument.swift
- ActiveDocumentKey struct added
- FocusedValues extension added using ActiveDocumentKey
- added debugging logic for printing doc ID

MenuCommands.swit
- added with struct MenuCommands and helpers
  ActiveDocumentKey
  FocusedValues extension providing activeDocument

ContentView
- .onAppear added so focus set to note, otherwise has stepper label editor
- set .focusedSceneValue pushing doc binding so avail to menu commands

DocUndoableApp
- added commands to scene
